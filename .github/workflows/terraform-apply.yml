name: Terraform Apply (Kubernetes Infra)

on:
  push:
    branches: [main]

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: production

    steps:
      # 1) Checkout
      - uses: actions/checkout@v4

      # 2) Credenciais AWS
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token:     ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region:            ${{ secrets.AWS_REGION }}

      # 3) Instala Terraform
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      # 4) Init
      - name: Terraform Init
        run: terraform init -input=false

      # 5) Plan – salva como artefato
      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -out=tfplan -input=false
      - uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: tfplan

      # 6) Apply – continua para passo de rollback se falhar
      - name: Terraform Apply
        id: apply
        run: |
          set -eo pipefail
          terraform apply -input=false -auto-approve tfplan
        continue-on-error: true

      # 7) Se apply falhar apenas no Node Group, taint + retry
      - name: Retry – recreating only Node Group
        if: steps.apply.outcome == 'failure'
        run: |
          echo "::warning title=Apply failed::Retrying only the node group"
          terraform taint -allow-missing aws_eks_node_group.node_group
          terraform apply -auto-approve
        continue-on-error: true
        # se falhar de novo, cai no próximo passo

      # 8) Destroy total (rollback) se ainda falhou
      - name: Rollback – Terraform Destroy
        if: failure()        # qualquer falha anterior chega aqui
        run: terraform destroy -auto-approve

      - name: Ensure cluster in state
        run: |
          terraform state list | grep -q 'aws_eks_cluster.eks' || \
          terraform import -no-color aws_eks_cluster.eks academy-cluster
